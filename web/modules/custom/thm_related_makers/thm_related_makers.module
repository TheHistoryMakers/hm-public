<?php

/**
 * @file
 * Contains thm_related_makers.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\search_api\Entity\Index;
use Drupal\node\NodeInterface;
use Drupal\file\Entity\File;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_help().
 */
function thm_related_makers_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the thm_related_makers module.
    case 'help.page.thm_related_makers':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Module for retrieval and display of people related to a specific HistoryMaker') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function thm_related_makers_theme() {
  return [
    'thm_related_makers' => [
      'variables' => [ 'data' => null ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function thm_related_makers_preprocess_block(&$variables) {
  $variables['#cache']['max-age'] = 0;
}


/**
 * Retrieves the node in current display context (page|view|block).
 * Returns false if node id isn't found.
 *
 * @return int|bool
 */
function thm_related_makers_get_current_node() {
  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node instanceof NodeInterface) {
    return $node;
  } else {
    return false;
  }
}

function thm_related_makers_get_image_url($fid) {
  if (!$fid) return false;

  return file_url_transform_relative(
    file_create_url(File::load($fid)->getFileUri()));
}

function thm_related_makers_get_terms($tidList) {
  return array_unique(array_map(function($tid) {
    return Term::load($tid)->getName();
  }, $tidList));
}

function thm_related_makers_get_node_tid($node, $field) {
  return array_unique(array_map(function($item) {
    return @$item->getValue()['target_id'];
  }, iterator_to_array($node->get($field))));
}

function thm_related_makers_parse_results($results) {

  return array_map(function($item) {
    /** @var Drupal\search_api\Item\ItemInterface $item */
    return [
      'title' => @$item->getField('title')->getValues()[0],
      'first_name' => stripslashes(
        @$item->getField('field_first_name')->getValues()[0]),
      'last_name' => @$item->getField('field_last_name')->getValues()[0],
      'bio_image' => thm_related_makers_get_image_url(
        @$item->getField('field_bio_image')->getValues()[0]),
      'maker_types' => thm_related_makers_get_terms(
        @$item->getField('field_maker_category')->getValues()),
      'occupations' => thm_related_makers_get_terms(
        @$item->getField('field_occupation')->getValues()),
    ];
  }, $results);
}


function get_test_data() {
  return [
    [
      'title' => 'John Atchison',
      'first_name' => 'John',
      'last_name' => 'Atchison',
      'bio_image' => '/sites/default/files/Atchison_John_wm.png',
      'maker_types' => [
        'StyleMakers'
      ],
      'occupations' => [ 'Personal Care Entrepreneur' ]
    ],
    [
      'title' => 'Na\'im Akbar',
      'first_name' => 'Na\'im',
      'last_name' => 'Akbar',
      'bio_image' => '/sites/default/files/Akbar_Naim_wm.png',
      'maker_types' => [
        'EducationMakers'
      ],
      'occupations' => [
        'Psychology Professor',
        'Publisher'
      ]
    ],
    [
      'title' => 'The Honorable John Allen',
      'first_name' => 'John',
      'last_name' => 'Allen',
      'bio_image' => '/sites/default/files/Allen_John_wm.png',
      'maker_types' => [
        'LawMakers'
      ],
      'occupations' => [ 'Superior Court Judge' ]
    ]
  ];
}

/**
 * Returns a
 * @param $node Drupal\node\Entity\Node
 *
 * @return array
 */
function thm_related_makers_get_search_params($node) {
  return [
    'nid' => $node->id(),
    'field_maker_category' => thm_related_makers_get_node_tid(
      $node, 'field_maker_category'),
    'field_occupation' => thm_related_makers_get_node_tid(
      $node, 'field_occupation'),
    'field_birth_place_term' => thm_related_makers_get_node_tid(
      $node, 'field_birth_place_term'),
    'field_organizations' => thm_related_makers_get_node_tid(
      $node, 'field_organizations')
  ];
}

/**
 * Adds condition parameters to the search query.
 *
 * @param $query Drupal\search_api\Query\QueryInterface
 * @param $data array
 *
 * @return void
 */
function thm_related_makers_add_conditions($query, $data) {
  //$conditions = $query->createConditionGroup('OR');
  foreach ($data as $field => $value) {
    if (is_array($value)) {
      drupal_set_message(
        "adding condition that $field matches something in " . print_r($value, true));
      $query->addCondition($field, $value, 'IN');
      /*foreach ($value as $item) {
        drupal_set_message("adding condition that $field equals $item");
        $query->addCondition($field, $item);
      }*/
    } else if (!is_array($value)) {
      //drupal_set_message("disabled condition that $field does NOT equal $value");
      //$conditions->addCondition($field, $value, '<>');
    } else {
      //drupal_set_message("adding condition that $field equals " . $value[0]);
      //$query->addCondition($field, $value);
    }
  }
}

function stringify_terms($node, $field) {
  return implode(' ', thm_related_makers_get_terms(
    thm_related_makers_get_node_tid($node, $field)
  ));
}

function thm_related_makers_build_term_string($node) {
  return implode(' ', [
    stringify_terms($node, 'field_maker_category'),
    stringify_terms($node, 'field_birth_place_term'),
    stringify_terms($node, 'field_organizations'),
    stringify_terms($node, 'field_occupation')
  ]);
}

/**
 * Performs the search.
 *
 * @throws Drupal\search_api\SearchApiException
 *
 * @param bool $testMode If true, sidesteps the search api and returns canned
 * data.
 *
 * @return array Returns array containing the # of results found and the
 * results themselves.
 */
function thm_related_makers_perform_search($testMode = false) {

  if ($testMode) {
    return [ 'count' => 3, 'data' => get_test_data() ];
  }

  $index = Index::load('biography_index');

  /** @var Drupal\search_api\Query\QueryInterface $query */
  $query  = $index->query(); // TODO: Wrap in try-catch block

  $node   = thm_related_makers_get_current_node();
  $terms  = null;

  $parseMode = \Drupal::service('plugin.manager.search_api.parse_mode')
    ->createInstance('terms')
    ->setConjunction('OR');

  $query->setParseMode($parseMode);

  if (!is_bool($node)) {
    $terms = thm_related_makers_build_term_string($node);
    $query->addCondition('nid', $node->id(), '<>');
    //drupal_set_message('parameters: ' . $terms);
  }

  //$query->keys("6678 41288 41286 41292 654571 43957 Tallahassee 'Association of Black Psychologists'");

  //$query->keys("'EducationMakers' 'Tallahassee' 'Association of Black Psychologists' 'Publisher'");

  $query->keys($terms);


  /*$query->setFulltextFields([
    'field_maker_category', 'field_occupation', 'field_organizations',
    'field_birth_place_term'
  ]);*/

  $query->setOption('conjunction', 'OR');
  $query->range(0, 5);

  $results = $query->execute(); // TODO: Wrap in try-catch block

  return [
    'count' => $results->getResultCount(),
    'data' => array_values(thm_related_makers_parse_results(
      $results->getResultItems()
    ))
  ];
}
