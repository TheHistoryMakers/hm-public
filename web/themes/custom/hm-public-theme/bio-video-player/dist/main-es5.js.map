{"version":3,"sources":["webpack:///src/app/scroll-transcript.directive.ts","webpack:///src/app/transcript-timing.ts","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ScrollTranscript","_renderer","el","topPosition","nativeElement","condition","topPos","offsetTop","updatePos","emit","TranscriptTiming","offset","time","timingPairArray","myTime","Number","myOffset","isNaN","environment","production","AppComponent","elementRef","mobileDetails","transcriptAreaHeight","myMatchContext","wideScreen","storyHasMatches","videoPositionInSeconds","transcriptHeightInitialized","currentIndex","source","getAttribute","source2","title","title2","thumb","replace","thumb2","timingPairs","timingPairs1","split","timingParis2","transcriptText","transcriptText1","transcriptText2","timingPairsVideo1","timingPairsToJSON","timingPairsVideo2","playlist","src","type","currentItem","previousItem","timingPairsArray","map","e","newTimingPairs","pair","buildFromArray","push","myStory","transcript","transcriptPieces","currentActiveTranscriptPiece","ComputeTimesForOffsets","ComputeTimedTranscriptWithMatches","matchOffset","matchEndOffset","textWithBoldedMatches","outOfBoundsOffset","timingIndexToCheckFirst","length","iMatch","startOffset","endOffset","substring","iTiming","transcriptPiece","re","i","scrollTop","whichPiece","api","getDefaultMedia","subscriptions","ended","subscribe","nextVideo","bind","item","index","initTranscriptHeight","computeTranscriptAreaHeight","window","innerWidth","innerHeight","fullWindowWidth","fullWindowHeight","blockOutHeight","extrasHeight","videoPlayerAndControlsAreaRef","offsetHeight","newTranscriptHeight","videoPlayerRef","aspectRatio","videogularElement","offsetWidth","event","movieTimeInSecs","currentTime","maxTimingEntries","movieTimeInMSecs","matchIndex","maxTimingPairIndex","givenMatchesCount","newEntry","onResize","onPlayerReady","isLoaded","adjustVideoCurrentTime","AppModule","INTERPOLATION_REGEXP","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module","exports","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAEA;AACA;AACA;AACA;AACA;;;UAEaA,gB;AAGT,kCAAoBC,SAApB,EAA0CC,EAA1C,EAA0D;AAAA;;AAAtC,eAAAD,SAAA,GAAAA,SAAA;AASV,eAAAE,WAAA,GAAiC,IAAI,0DAAJ,EAAjC;AATkD,eAAKD,EAAL,GAAUA,EAAE,CAACE,aAAb;AAA6B;;;;eAEzF,aAAkCC,SAAlC,EAAsD;AAClD,gBAAIA,SAAJ,EAAe;AACX,kBAAIC,MAAM,GAAG,KAAKJ,EAAL,CAAQK,SAArB;AACA,mBAAKC,SAAL,CAAeF,MAAf;AACH;AACJ;;;iBAID,mBAAUA,MAAV,EAAkB;AACd,iBAAKH,WAAL,CAAiBM,IAAjB,CAAsBH,MAAtB;AACH;;;;;;;yBAhBQN,gB,EAAgB,wH,EAAA,yH;AAAA,O;;;cAAhBA,gB;AAAgB,qD;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACR7B;AAAA;;;AAAA;AAAA;AAAA;;UAAaU,gB;AAIX,oCAAc;AAAA;;AACZ,eAAKC,MAAL,GAAc,CAAd;AACA,eAAKC,IAAL,GAAY,CAAZ;AACD;;;;iBAED,wBAAeC,eAAf,EAA8B;AAC5B,gBAAIC,MAAM,GAAGC,MAAM,CAACF,eAAe,CAAC,CAAD,CAAhB,CAAnB;AACA,gBAAIG,QAAQ,GAAGD,MAAM,CAACF,eAAe,CAAC,CAAD,CAAhB,CAArB;AACA,gBAAG,CAACI,KAAK,CAACH,MAAD,CAAT,EACE,KAAKF,IAAL,GAAYE,MAAZ;AACF,gBAAG,CAACG,KAAK,CAACD,QAAD,CAAT,EACE,KAAKL,MAAL,GAAcK,QAAd;AACF,mBAAO,IAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACjBH;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;AACA;;;AAEO,UAAME,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACwCoB;;AACI;;AAGI;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAClD;;;;;;;;;AAJU;;AAAA;;AACF,iIAAmD,WAAnD,EAAmD,WAAnD,EAAmD,4DAAnD;;;;;;AANxB;;AACI;;AACQ;;AACA;;AACI;;AAMJ;;AACJ;;AACJ;;AACJ;;;;;;AAXiH;;AAAA;;AAAnD;;AAEK;;AAAA;;;;UDrB1DC,Y;AAqCX,8BAAoBC,UAApB,EAA2C;AAAA;;AAAvB,eAAAA,UAAA,GAAAA,UAAA;AA1BpB,eAAAC,aAAA,GAAyB,KAAzB;AACA,eAAAC,oBAAA,GAA+B,GAA/B;AAKA,eAAAC,cAAA,GAAmC,EAAnC;AAIA,eAAAC,UAAA,GAAsB,KAAtB;AACA,eAAAC,eAAA,GAA2B,IAA3B;AACA,eAAAC,sBAAA,GAAiC,CAAjC;AAKA,eAAAC,2BAAA,GAAuC,KAAvC;AAKA,eAAAC,YAAA,GAAe,CAAf;AAKE,eAAKC,MAAL,GAAc,KAAKT,UAAL,CAAgBjB,aAAhB,CAA8B2B,YAA9B,CAA2C,QAA3C,CAAd;AACA,eAAKC,OAAL,GAAe,KAAKX,UAAL,CAAgBjB,aAAhB,CAA8B2B,YAA9B,CAA2C,SAA3C,CAAf;AACA,eAAKE,KAAL,GAAa,KAAKZ,UAAL,CAAgBjB,aAAhB,CAA8B2B,YAA9B,CAA2C,OAA3C,CAAb;AACA,eAAKG,MAAL,GAAc,KAAKb,UAAL,CAAgBjB,aAAhB,CAA8B2B,YAA9B,CAA2C,QAA3C,CAAd;AACA,eAAKI,KAAL,GAAa,KAAKL,MAAL,CAAYM,OAAZ,CAAoB,OAApB,EAA4B,OAA5B,CAAb;AACA,eAAKC,MAAL,GAAc,KAAKL,OAAL,CAAaI,OAAb,CAAqB,OAArB,EAA6B,OAA7B,CAAd;AAEA,eAAKE,WAAL,GAAmB,KAAKjB,UAAL,CAAgBjB,aAAhB,CAA8B2B,YAA9B,CAA2C,aAA3C,CAAnB;AACA,cAAIQ,YAAY,GAAG,KAAKD,WAAL,CAAiBE,KAAjB,CAAuB,MAAvB,EAA+B,CAA/B,CAAnB;AACA,cAAIC,YAAY,GAAG,KAAKH,WAAL,CAAiBE,KAAjB,CAAuB,MAAvB,EAA+B,CAA/B,CAAnB;AAEA,eAAKE,cAAL,GAAsB,KAAKrB,UAAL,CAAgBjB,aAAhB,CAA8B2B,YAA9B,CAA2C,gBAA3C,CAAtB;AACA,eAAKW,cAAL,GAAsB,KAAKA,cAAL,CAAoBN,OAApB,CAA6B,WAA7B,EAA0C,MAA1C,EAAkDA,OAAlD,CAA0D,MAA1D,EAAkE,EAAlE,CAAtB;AAA4F;AAC5F,eAAKO,eAAL,GAAuB,KAAKD,cAAL,CAAoBF,KAApB,CAA0B,MAA1B,EAAkC,CAAlC,CAAvB;AACA,eAAKI,eAAL,GAAuB,KAAKF,cAAL,CAAoBF,KAApB,CAA0B,MAA1B,EAAkC,CAAlC,CAAvB;AAEA,eAAKK,iBAAL,GAAyB,KAAKC,iBAAL,CAAuBP,YAAvB,CAAzB;AACA,eAAKQ,iBAAL,GAAyB,KAAKD,iBAAL,CAAuBL,YAAvB,CAAzB;AAEA,eAAKO,QAAL,GAAgB,CACd;AACEf,iBAAK,EAAE,KAAKA,KADd;AAEEgB,eAAG,EAAE,KAAKnB,MAFZ;AAGEoB,gBAAI,EAAE,WAHR;AAIEf,iBAAK,EAAE,KAAKA;AAJd,WADc,EAOd;AACEF,iBAAK,EAAE,KAAKC,MADd;AAEEe,eAAG,EAAE,KAAKjB,OAFZ;AAGEkB,gBAAI,EAAE,WAHR;AAIEf,iBAAK,EAAE,KAAKE;AAJd,WAPc,CAAhB;AAcA,eAAKc,WAAL,GAAmB,KAAKH,QAAL,CAAe,KAAKnB,YAApB,CAAnB;AACA,eAAKuB,YAAL,GAAoB,KAAKJ,QAAL,CAAe,KAAKnB,YAAL,GAAoB,CAAnC,CAApB;AACD;;;;iBAED,2BAAkBS,WAAlB,EAA+B;AAC7B,gBAAIe,gBAAgB,GAAGf,WAAW,CAACE,KAAZ,CAAkB,GAAlB,EAAuBc,GAAvB,CAA2B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACf,KAAF,CAAQ,GAAR,CAAJ;AAAA,aAA5B,CAAvB;AACA,gBAAIgB,cAAc,GAAG,EAArB;;AAF6B,uDAGDH,gBAHC;AAAA;;AAAA;AAG7B,kEAA8C;AAAA,oBAArCxC,eAAqC;AAE5C,oBAAI4C,IAAI,GAAG,IAAI,mEAAJ,GACRC,cADQ,CACO7C,eADP,CAAX;AAGA2C,8BAAc,CAACG,IAAf,CAAoBF,IAApB;AACD;AAT4B;AAAA;AAAA;AAAA;AAAA;;AAU7B,mBAAOD,cAAP;AACD;;;iBAED,oBAAW;AACT,iBAAKI,OAAL,GAAe;AACbC,wBAAU,EAAE,KAAKlB,eADJ;AAEbL,yBAAW,EAAE,KAAKO;AAFL,aAAf;AAIA,iBAAKiB,gBAAL,GAAwB,EAAxB;AACA,iBAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,EAA3B;AACA,iBAAKI,4BAAL,GAAoC,CAAC,CAArC;AACA,iBAAKC,sBAAL;AACA,iBAAKC,iCAAL;AACD,W,CAED;AACA;;;;iBACQ,6CAAoC;AAC1C,gBAAIC,WAAJ;AACA,gBAAIC,cAAJ;AACA,gBAAIC,qBAAJ;AACA,gBAAIC,iBAAJ;AACA,gBAAIC,uBAAJ;;AAEA,gBAAI,KAAKV,OAAL,CAAaC,UAAb,IAA2B,IAA3B,IAAmC,KAAKD,OAAL,CAAaC,UAAb,CAAwBU,MAAxB,IAAkC,CAAzE,EAA4E;AAC1E,mBAAKT,gBAAL,GAAwB,EAAxB;AACA,mBAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,EAA3B;AACA,qBAH0E,CAGlE;AACT,aAXyC,CAa1C;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACAU,6BAAiB,GAAG,KAAKT,OAAL,CAAaC,UAAb,CAAwBU,MAA5C,CA1B0C,CA0BU;;AACpDH,iCAAqB,GAAG,EAAxB;AACEE,mCAAuB,GAAG,KAAKV,OAAL,CAAatB,WAAb,CAAyBiC,MAAzB,GAAkC,CAA5D,CA5BwC,CA4BuB;;AAC/D,iBAAK,IAAIC,MAAM,GAAW,KAAKhD,cAAL,CAAoB+C,MAApB,GAA6B,CAAvD,EAA0DC,MAAM,IAAI,CAApE,EAAuEA,MAAM,EAA7E,EAAiF;AACjFN,yBAAW,GAAG,KAAK1C,cAAL,CAAoBgD,MAApB,EAA4BC,WAA1C;AACAN,4BAAc,GAAG,KAAK3C,cAAL,CAAoBgD,MAApB,EAA4BE,SAA7C;;AACA,kBAAIR,WAAW,GAAGG,iBAAlB,EAAqC;AAAE;AACrC;AACA;AAEA;AACA;AAEA;AACA;AACA,oBAAIF,cAAc,GAAGE,iBAArB,EAAwC;AACtCD,uCAAqB,GAAG,QACtB,KAAKR,OAAL,CAAaC,UAAb,CAAwBc,SAAxB,CAAkCT,WAAlC,EAA+CC,cAA/C,CADsB,GAC2C,MAD3C,GAEtB,KAAKP,OAAL,CAAaC,UAAb,CAAwBc,SAAxB,CAAkCR,cAAlC,EAAkDE,iBAAlD,CAFsB,GAEiDD,qBAFzE;AAGD,iBAJD,MAKK;AAAE;AACLA,uCAAqB,GAAG,QACtB,KAAKR,OAAL,CAAaC,UAAb,CAAwBc,SAAxB,CAAkCT,WAAlC,EAA+CC,cAA/C,CADsB,GAC2C,MAD3C,GACoDC,qBAD5E;AAED;;AACDC,iCAAiB,GAAGH,WAApB,CAlBmC,CAkBF;;AACjC,uBAAO,KAAKN,OAAL,CAAatB,WAAb,CAAyBgC,uBAAzB,EAAkD3D,MAAlD,IAA4DuD,WAA5D,IAA2EI,uBAAuB,GAAG,CAA5G,EAA+G;AAC7GA,yCAAuB,GADsF,CAClF;AAC5B;;AACD,qBAAK,IAAIM,OAAO,GAAGN,uBAAnB,EAA4CM,OAAO,GAAG,KAAKhB,OAAL,CAAatB,WAAb,CAAyBiC,MAA/E,EAAuFK,OAAO,EAA9F,EAAkG;AAChG,sBAAI,KAAKhB,OAAL,CAAatB,WAAb,CAAyBsC,OAAzB,EAAkCjE,MAAlC,GAA2CuD,WAA/C,EAA4D;AAC1D;AACA,wBAAI,KAAKN,OAAL,CAAatB,WAAb,CAAyBsC,OAAzB,EAAkCjE,MAAlC,IAA4CwD,cAAhD,EACE,KAAKP,OAAL,CAAatB,WAAb,CAAyBsC,OAAzB,EAAkCjE,MAAlC,IAA4C,CAA5C,CADF,KAGE,KAAKiD,OAAL,CAAatB,WAAb,CAAyBsC,OAAzB,EAAkCjE,MAAlC,IAA4C,CAA5C;AACH,mBAP+F,CAQhG;AACA;;AACD;AACF;AACF;;AACD,gBAAI,KAAKa,cAAL,CAAoB+C,MAApB,GAA6B,CAAjC,EAAoC;AAClC;AACA;AACA,kBAAIF,iBAAiB,GAAG,CAAxB,EACED,qBAAqB,GAAG,KAAKR,OAAL,CAAaC,UAAb,CAAwBc,SAAxB,CAAkC,CAAlC,EAAqCN,iBAArC,IAA0DD,qBAAlF;AACH,aALD,MAMK;AACH;AACAA,mCAAqB,GAAG,KAAKR,OAAL,CAAaC,UAArC;AACD,aA5EyC,CA8E1C;AACA;;;AACA,iBAAKC,gBAAL,GAAwB,EAAxB;AACA,gBAAIe,eAAJ;AACA,gBAAIC,EAAE,GAAG,KAAT,CAlF0C,CAoF1C;AACA;;AACA,gBAAI,KAAKlB,OAAL,CAAatB,WAAb,CAAyBiC,MAAzB,GAAkC,CAAtC,EAAyC;AACvC;AAEI,mBAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnB,OAAL,CAAatB,WAAb,CAAyBiC,MAAzB,GAAkC,CAAtD,EAAyDQ,CAAC,EAA1D,EAA8D;AAChE,oBAAI,KAAKnB,OAAL,CAAatB,WAAb,CAAyByC,CAAC,GAAG,CAA7B,EAAgCpE,MAAhC,GAAyC,KAAKiD,OAAL,CAAatB,WAAb,CAAyByC,CAAzB,EAA4BpE,MAAzE,EAAiF;AAC/E;AACAkE,iCAAe,GAAGT,qBAAqB,CAACO,SAAtB,CAAgC,KAAKf,OAAL,CAAatB,WAAb,CAAyByC,CAAzB,EAA4BpE,MAA5D,EAChB,KAAKiD,OAAL,CAAatB,WAAb,CAAyByC,CAAC,GAAG,CAA7B,EAAgCpE,MADhB,CAAlB;AAEAkE,iCAAe,GAAGA,eAAe,CAACzC,OAAhB,CAAwB0C,EAAxB,EAA2B,MAA3B,CAAlB;AACA,uBAAKhB,gBAAL,CAAsBH,IAAtB,CAA2BkB,eAA3B;AACD,iBAND,MAQE;AACA,uBAAKf,gBAAL,CAAsBH,IAAtB,CAA2B,EAA3B;AACH;AACF,aAfD,MAgBK;AACH;AACA;AACAkB,6BAAe,GAAGT,qBAAqB,CAAChC,OAAtB,CAA8B0C,EAA9B,EAAiC,MAAjC,CAAlB;AACA,mBAAKhB,gBAAL,CAAsBH,IAAtB,CAA2BkB,eAA3B;AACD;AACF,W,CAED;;;;iBACA,2BAAkBlE,MAAlB,EAA0B;AACxB,gBAAIA,MAAM,GAAG,EAAb,EAAiB,KAAKkD,UAAL,CAAgBzD,aAAhB,CAA8B4E,SAA9B,GAA0CrE,MAAM,GAAG,EAAnD;AAClB;;;iBAED,iCAAwBsE,UAAxB,EAA4C;AAAE,mBAAQA,UAAU,IAAI,KAAKlB,4BAA3B;AAA2D;;;iBAEzG,uBAAcmB,GAAd,EAAiC;AAC/B,iBAAKA,GAAL,GAAWA,GAAX;AACA,iBAAKA,GAAL,CAASC,eAAT,GAA2BC,aAA3B,CAAyCC,KAAzC,CAA+CC,SAA/C,CAAyD,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAzD;AACD;;;iBAED,qBAAY;AACV,iBAAKpC,YAAL,GAAoB,KAAKD,WAAzB;AACA,iBAAKtB,YAAL;;AAEA,gBAAI,KAAKA,YAAL,KAAsB,KAAKmB,QAAL,CAAcuB,MAAxC,EAAgD;AAC9C,mBAAK1C,YAAL,GAAoB,CAApB;AACA,mBAAK+B,OAAL,GAAe;AACbC,0BAAU,EAAE,KAAKlB,eADJ;AAEbL,2BAAW,EAAE,KAAKO;AAFL,eAAf;AAIA,mBAAKiB,gBAAL,GAAwB,EAAxB;AACA,mBAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,EAA3B;AACA,mBAAKI,4BAAL,GAAoC,CAAC,CAArC;AACA,mBAAKC,sBAAL;AACA,mBAAKC,iCAAL;AACD,aAXD,MAYK;AACH,mBAAKL,OAAL,GAAe;AACbC,0BAAU,EAAE,KAAKjB,eADJ;AAEbN,2BAAW,EAAE,KAAKS;AAFL,eAAf;AAIA,mBAAKe,gBAAL,GAAwB,EAAxB;AACA,mBAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,EAA3B;AACA,mBAAKI,4BAAL,GAAoC,CAAC,CAArC;AACA,mBAAKC,sBAAL;AACA,mBAAKC,iCAAL;AACD;;AAED,iBAAKd,WAAL,GAAmB,KAAKH,QAAL,CAAe,KAAKnB,YAApB,CAAnB;AAED;;;iBAED,6BAAoB4D,IAApB,EAAkCC,KAAlC,EAAiD;AAC/C,iBAAK7D,YAAL,GAAoB6D,KAApB;AACA,iBAAKvC,WAAL,GAAmBsC,IAAnB;AACD;;;iBAED,oBAAW;AACT,iBAAKE,oBAAL;AACD;;;iBAEM,gCAAuB;AAC5B,iBAAKC,2BAAL,CAAiCC,MAAM,CAACC,UAAxC,EAAoDD,MAAM,CAACE,WAA3D;AACD;;;iBAEO,qCAA4BC,eAA5B,EAAqDC,gBAArD,EAA+E;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAIC,cAAc,GAAG,GAArB;AACA,gBAAIC,YAAY,GAAG,EAAnB,CARqF,CAQ9D;AACvB;;AACA,gBAAIH,eAAe,IAAI,GAAvB,EAA4B;AAC1B,kBAAIA,eAAe,IAAI,GAAvB,EAA4B;AAC1BG,4BAAY,IAAI,GAAhB,CAD0B,CACL;;AACrBD,8BAAc,IAAI,EAAlB;AACD,eAHD,MAIK,IAAIF,eAAe,IAAI,GAAvB,EAA4B;AAC/BG,4BAAY,IAAI,GAAhB,CAD+B,CACV;;AACrBD,8BAAc,IAAI,EAAlB;AACD,eAHI,MAIA;AACHC,4BAAY,IAAI,CAAhB,CADG,CACgB;;AACnBD,8BAAc,IAAI,EAAlB;AACD;AACF;;AACD,gBAAI,KAAKE,6BAAT,EAAwC;AACtCF,4BAAc,GAAG,KAAKE,6BAAL,CAAmChG,aAAnC,CAAiDiG,YAAjD,GAAgE,EAAjF,CADsC,CAC+C;AACtF;;AACD,gBAAIC,mBAAmB,GAAGL,gBAAgB,GAAGC,cAAnB,GAAoCC,YAA9D;AAEA,gBAAIG,mBAAmB,GAAG,GAA1B,EACEA,mBAAmB,GAAG,GAAtB;;AACF,gBAAI,KAAKC,cAAT,EAAyB;AACvB,kBAAMC,WAAW,GAAG,KAAKD,cAAL,CAAoBrB,GAApB,CAAwBuB,iBAAxB,CAA0CC,WAA1C,GAAwD,KAAKH,cAAL,CAAoBrB,GAApB,CAAwBuB,iBAAxB,CAA0CJ,YAAtH;;AACA,kBAAIL,eAAe,IAAI,GAAnB,IAA0B,KAAKvE,UAAL,KAAoB,KAAlD,EAAyD;AACvD,qBAAKF,oBAAL,GAA4B,GAA5B;AACD,eAFD,CAGE;AACA;AACA;AACA;AACF;AAPA,mBAQK;AACH,sBAAI,KAAKG,eAAL,KAAyB,IAA7B,EAAmC,KAAKH,oBAAL,GAA4B0E,gBAAgB,IAAI,KAAKM,cAAL,CAAoBrB,GAApB,CAAwBuB,iBAAxB,CAA0CJ,YAA1C,GAAyD,GAA7D,CAA5C,CAAnC,KACK,KAAK9E,oBAAL,GAA4B0E,gBAAgB,IAAI,KAAKM,cAAL,CAAoBrB,GAApB,CAAwBuB,iBAAxB,CAA0CJ,YAA1C,GAAyD,GAA7D,CAA5C;AACN;AACF;AACF;;;iBAED,kBAASM,KAAT,EAAgB;AACd,iBAAKf,2BAAL,CAAiCC,MAAM,CAACC,UAAxC,EAAoDD,MAAM,CAACE,WAA3D;AACD;;;iBAED,kCAAyB;AACvB,gBAAIa,eAAJ;AACAA,2BAAe,GAAI,KAAK1B,GAAL,CAASC,eAAT,GAA2B0B,WAA9C,CAFuB,CAIvB;;AACA,gBAAI,CAAC,KAAKjF,2BAAV,EAAuC;AACrC,mBAAKgE,2BAAL,CAAiCC,MAAM,CAACC,UAAxC,EAAoDD,MAAM,CAACE,WAA3D;AACA,mBAAKnE,2BAAL,GAAmC,IAAnC;AACD;;AAED,iBAAKD,sBAAL,GAA8BiF,eAA9B,CAVuB,CAWvB;;AACA,gBAAIE,gBAAgB,GAAW,CAA/B;AAEA,gBAAI,KAAKlD,OAAL,IAAgB,KAAKA,OAAL,CAAatB,WAAjC,EACEwE,gBAAgB,GAAG,KAAKlD,OAAL,CAAatB,WAAb,CAAyBiC,MAA5C;;AAEF,gBAAIuC,gBAAgB,GAAG,CAAvB,EAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAIC,gBAAgB,GAAWH,eAAe,GAAG,IAAjD;;AACA,kBAAI,KAAK7C,4BAAL,GAAoC,CAApC,IACFgD,gBAAgB,GAAG,KAAKnD,OAAL,CAAatB,WAAb,CAAyB,KAAKyB,4BAA9B,EAA4DnD,IAD7E,IAEFmG,gBAAgB,GAAG,KAAKnD,OAAL,CAAatB,WAAb,CAAyB,KAAKyB,4BAAL,GAAoC,CAA7D,EAAgEnD,IAFrF,EAE2F;AACzF;AACA,oBAAImG,gBAAgB,GAAG,KAAKnD,OAAL,CAAatB,WAAb,CAAyB,CAAzB,EAA4B1B,IAAnD,EACE,KAAKmD,4BAAL,GAAoC,CAApC,CADF,KAEK,IAAIgD,gBAAgB,IAAI,KAAKnD,OAAL,CAAatB,WAAb,CAAyBwE,gBAAgB,GAAG,CAA5C,EAA+ClG,IAAvE,EACH,KAAKmD,4BAAL,GAAoC+C,gBAAgB,GAAG,CAAvD,CADG,KAEA;AACH,uBAAK,IAAI/B,CAAC,GAAW,CAArB,EAAwBA,CAAC,GAAG+B,gBAAgB,GAAG,CAA/C,EAAkD/B,CAAC,EAAnD;AACE,wBAAIgC,gBAAgB,GAAG,KAAKnD,OAAL,CAAatB,WAAb,CAAyByC,CAAC,GAAG,CAA7B,EAAgCnE,IAAvD,EAA6D;AAC3D,2BAAKmD,4BAAL,GAAoCgB,CAApC;AACA;AACD;AAJH;AAKD;AACF;AACF;AACF;;;iBAEO,kCAAyB;AAC/B;AACA,gBAAIA,CAAC,GAAW,CAAhB;AACA,gBAAIiC,UAAU,GAAW,CAAzB;AACA,gBAAIC,kBAAJ;AACA,gBAAIC,iBAAJ;AACA,gBAAIC,QAAJ;AAEA,gBAAI,KAAKvD,OAAL,CAAatB,WAAb,IAA4B,IAAhC,EACE2E,kBAAkB,GAAG,CAAC,CAAtB,CADF,KAGEA,kBAAkB,GAAG,KAAKrD,OAAL,CAAatB,WAAb,CAAyBiC,MAAzB,GAAkC,CAAvD;;AACF,gBAAI2C,iBAAiB,IAAI,CAArB,IAA0BD,kBAAkB,IAAI,CAApD,EAAuD;AACrD,mBAAKvF,eAAL,GAAuB,KAAvB;AACA,mBAAKF,cAAL,GAAsB,EAAtB;AACA;AACD;;AAED,iBAAKE,eAAL,GAAuB,IAAvB,CAlB+B,CAmB/B;AACA;AACA;;AACA,mBAAOsF,UAAU,GAAGE,iBAApB,EAAuC;AACrC,kBAAInC,CAAC,IAAI,CAAT,EACEoC,QAAQ,CAACvG,IAAT,GAAgB,KAAKgD,OAAL,CAAatB,WAAb,CAAyB,CAAzB,EAA4B1B,IAA5C,CADF,KAGEuG,QAAQ,CAACvG,IAAT,GAAgB,KAAKgD,OAAL,CAAatB,WAAb,CAAyByC,CAAC,GAAG,CAA7B,EAAgCnE,IAAhD;AACF,mBAAKY,cAAL,CAAoBmC,IAApB,CAAyBwD,QAAzB;AACAH,wBAAU,GAN2B,CAMvB;AACf;AACF;;;;;;;yBA3YU5F,Y,EAAY,yH;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnBzB;;AAAK;AAAA,qBAAiB,IAAAgG,QAAA,QAAjB;AAAiC,aAAjC,EAAiC,KAAjC,EAAiC,6DAAjC;;AACD;;AACI;;AACI;;AAAyB;;AAAqB;;AAC9C;;AAAW;AAAA,qBAAiB,IAAAC,aAAA,QAAjB;AAAsC,aAAtC;;AACT;;AACI;;AACI;;AACA;;AAAsF;;AACtF;;AACA;;AACI;;AACJ;;AACA;;AAAA;;AACI;;AACI;;AACJ;;AACA;;AACJ;;AACA;;AAAA;;AACJ;;AACJ;;AACA;;AAA4I;AAAA,qBAAc,IAAAC,QAAA,EAAd;AAAwB,aAAxB,EAAyB,YAAzB,EAAyB;AAAA,qBAAe,IAAAC,sBAAA,EAAf;AAAuC,aAAhE,EAAyB,OAAzB,EAAyB;AAAA,qBAAkD,IAAAhC,SAAA,EAAlD;AAA6D,aAAtF;;AAAwF;;AACtO;;AACJ;;AAEA;;AACI;;AAAI;;AAAO;;AACX;;AAAmC;AAAA,qBAAS,IAAAA,SAAA,EAAT;AAAoB,aAApB;;AAC/B;;AAAsB;;AAA+D;;AACrF;;AAAsC;;AAAsB;;AAChE;;AACJ;;AACJ;;AAGA;;AAcJ;;;;;;AA/CqC;;AAAA;;AAK2B;;AAAA;;AACA;;AAAA;;AAEwB;;AAAA;;AAWhD;;AAAA,8JAAuB,SAAvB,EAAuB,GAAvB,EAAuB,QAAvB,EAAuB,qBAAvB,EAAuB,2DAAvB;;AAO2B;;AAAA;;AACb;;AAAA;;AAMnC;;AAAA;;;;;;;;;;;;;;;;;;;;;ACpCnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA6BaiC,S;;;;;yBAAAA,S;AAAS,O;;;cAATA,S;AAAS,oBAFR,2DAEQ;;;mBAHT,E;AAAE,kBATJ,CACP,uEADO,EAEP,0DAFO,EAGP,qEAHO,EAIP,4EAJO,EAKP,oFALO,EAMP,2FANO,EAOP,sFAPO,CASI;;;;4HAGFA,S,EAAS;AAAA,yBAflB,2DAekB,EAdlB,6EAckB;AAdF,oBAGhB,uEAHgB,EAIhB,0DAJgB,EAKhB,qEALgB,EAMhB,4EANgB,EAOhB,oFAPgB,EAQhB,2FARgB,EAShB,sFATgB;AAcE,S;AALD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBrB,UAAI,sEAAYrG,UAAhB,EAA4B;AAC1B;AACD;;AAED,UAAIsG,oBAAoB,GAAG,qBAA3B,C,CAAkD;;AAElD,kFAAyBC,eAAzB,CAAyC,yDAAzC;;;;;;;;;;;;;;;ACZA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIxE,CAAC,GAAG,IAAIyE,KAAJ,CAAU,yBAAyBJ,GAAzB,GAA+B,GAAzC,CAAR;AACArE,WAAC,CAAC0E,IAAF,GAAS,kBAAT;AACA,gBAAM1E,CAAN;AACA,SAJM,CAAP;AAKA;;AACDoE,8BAAwB,CAACO,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAP,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAQ,YAAM,CAACC,OAAP,GAAiBT,wBAAjB;AACAA,8BAAwB,CAACU,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import { Directive, ElementRef, Input, Renderer2, Output, EventEmitter } from '@angular/core';\n\n// NOTE: this directive used to use scrollIntoView with window scrolling removed via CSS. However, it has been updated to pass\n// the top offset value of the element to the parent component. From there, the parent uses scrollTop with that value\n// on the transcript container. This way, we can scroll the element with overflow rather than the entire window, which is\n// better for responsive heights and layouts. We may want to discuss the value of keeping this functionality as a directive vs.\n// creating a transcript component. Right now, we still have to do the actual scrolling inside a function in the parent component.\n@Directive({ selector: '[thdaScrollTranscript]' })\nexport class ScrollTranscript {\n    private el: HTMLElement;\n\n    constructor(private _renderer: Renderer2, el: ElementRef) { this.el = el.nativeElement; }\n\n    @Input() set thdaScrollTranscript(condition: boolean) {\n        if (condition) {\n            var topPos = this.el.offsetTop;\n            this.updatePos(topPos);\n        }\n    }\n\n    @Output() topPosition: EventEmitter<any> = new EventEmitter();\n\n    updatePos(topPos) {\n        this.topPosition.emit(topPos);\n    }\n}\n","export class TranscriptTiming {\n  public offset: number;\n  public time: number;\n\n  constructor() {\n    this.offset = 0;\n    this.time = 0;\n  }\n\n  buildFromArray(timingPairArray){\n    let myTime = Number(timingPairArray[0]);\n    let myOffset = Number(timingPairArray[1]);\n    if(!isNaN(myTime))\n      this.time = myTime;\n    if(!isNaN(myOffset))\n      this.offset = myOffset;\n    return this;\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { Component, Input, ElementRef, ViewChild } from '@angular/core';\nimport { DetailedStory } from './detailed-story';\nimport { TimedTextMatch } from './timed-text-match';\nimport { TranscriptTiming } from './transcript-timing';\nimport { VgApiService }         from '@videogular/ngx-videogular/core';\n\nexport interface IMedia {\n  title: string;\n  src: string;\n  type: string;\n  thumb: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  @ViewChild('myVideoArea') videoPlayerAndControlsAreaRef: ElementRef;\n  @ViewChild('myVideoPlayer') videoPlayerRef: any;\n  @ViewChild('transcript') transcript: any;\n\n  source: string;\n  source2: string;\n  title: string;\n  title2: string;\n  thumb: string;\n  thumb2: string;\n  mobileDetails: boolean = false;\n  transcriptAreaHeight: number = 100;\n  transcriptText: string;\n  transcriptText1: string;\n  transcriptText2: string;\n  myStory: DetailedStory;\n  myMatchContext: TimedTextMatch[] = [];\n  timingPairs: string;\n  timingPairsVideo1: TranscriptTiming[];\n  timingPairsVideo2: TranscriptTiming[];\n  wideScreen: boolean = false;\n  storyHasMatches: boolean = true;\n  videoPositionInSeconds: number = 0;\n\n  // Support interfaces for transcript scrolling\n  currentActiveTranscriptPiece: number;\n  transcriptPieces: string[];\n  transcriptHeightInitialized: boolean = false;\n\n  public api: VgApiService;\n\n  playlist: Array<IMedia>;\n  currentIndex = 0;\n  currentItem: IMedia;\n  previousItem: IMedia;\n\n  constructor(private elementRef:ElementRef) {\n    this.source = this.elementRef.nativeElement.getAttribute('source');\n    this.source2 = this.elementRef.nativeElement.getAttribute('source2');\n    this.title = this.elementRef.nativeElement.getAttribute('title');\n    this.title2 = this.elementRef.nativeElement.getAttribute('title2');\n    this.thumb = this.source.replace('video','image');\n    this.thumb2 = this.source2.replace('video','image');\n\n    this.timingPairs = this.elementRef.nativeElement.getAttribute('timingPairs');\n    let timingPairs1 = this.timingPairs.split(/[\\$]/)[0];\n    let timingParis2 = this.timingPairs.split(/[\\$]/)[1];\n\n    this.transcriptText = this.elementRef.nativeElement.getAttribute('transcriptText');\n    this.transcriptText = this.transcriptText.replace( /(\\$)\\1+/gi, \"\\n\\n\").replace(/[\\\\]/, '');;\n    this.transcriptText1 = this.transcriptText.split(/[\\$]/)[0];\n    this.transcriptText2 = this.transcriptText.split(/[\\$]/)[1];\n\n    this.timingPairsVideo1 = this.timingPairsToJSON(timingPairs1);\n    this.timingPairsVideo2 = this.timingPairsToJSON(timingParis2);\n\n    this.playlist = [\n      {\n        title: this.title,\n        src: this.source,\n        type: 'video/mp4',\n        thumb: this.thumb\n      },\n      {\n        title: this.title2,\n        src: this.source2,\n        type: 'video/mp4',\n        thumb: this.thumb2\n      }\n    ];\n    this.currentItem = this.playlist[ this.currentIndex ];\n    this.previousItem = this.playlist[ this.currentIndex + 1 ];\n  }\n\n  timingPairsToJSON(timingPairs) {\n    let timingPairsArray = timingPairs.split(':').map(e => e.split(','));\n    let newTimingPairs = [];\n    for (let timingPairArray of timingPairsArray) {\n\n      let pair = new TranscriptTiming()\n        .buildFromArray(timingPairArray);\n\n      newTimingPairs.push(pair);\n    }\n    return newTimingPairs;\n  }\n\n  ngOnInit() {\n    this.myStory = {\n      transcript: this.transcriptText1,\n      timingPairs: this.timingPairsVideo1\n    }\n    this.transcriptPieces = [];\n    this.transcriptPieces.push(\"\");\n    this.currentActiveTranscriptPiece = -1;\n    this.ComputeTimesForOffsets();\n    this.ComputeTimedTranscriptWithMatches();\n  }\n\n  // Helper function to bold match text in the transcript, and break transcript up into pieces to\n  // highlight a piece based on video transcript timing.  If there are no matches, then no text will get bolded.\n  private ComputeTimedTranscriptWithMatches() {\n    var matchOffset: number;\n    var matchEndOffset: number;\n    var textWithBoldedMatches: string;\n    var outOfBoundsOffset: number;\n    var timingIndexToCheckFirst: number;\n\n    if (this.myStory.transcript == null || this.myStory.transcript.length == 0) {\n      this.transcriptPieces = [];\n      this.transcriptPieces.push(\"\");\n      return; // give up if there is no transcript\n    }\n\n    // NOTE: assumes this.myStory.timing.length >= 1\n\n    // Pass 1: for every match BLAH, add in <b> and </b> markers around BLAH in transcript text.\n    // As such inserts are done, update the offset numbers in this.myStory.timingPairs.  The plain transcript\n    // will transform into textWithBoldedMatches.\n    // Pass 2: use this.myStory.timing to break textWithBoldedMatches (i.e., the transcript with matches)\n    // into this.transcriptPieces.\n\n    // Pass 1: walk the matches from last one (greatest offset into transcript) to first...\n    // Once a match is processed, never consider those characters again, i.e., even if match offsets\n    // and scoring words somehow overlap/intermingle, the logic here will never allow for a case like\n    // <b>ok here <b>bad, bold in bold</b></b> because the ending </b> of match N will never be placed\n    // after the start <b> of match N+1.\n    outOfBoundsOffset = this.myStory.transcript.length; // index transcriptText.length out of bounds (index transcriptText.length-1 still valid for length >= 1)\n    textWithBoldedMatches = \"\";\n      timingIndexToCheckFirst = this.myStory.timingPairs.length - 1; // working from end of transcript back to front, so start with last timing entry\n      for (var iMatch: number = this.myMatchContext.length - 1; iMatch >= 0; iMatch--) {\n      matchOffset = this.myMatchContext[iMatch].startOffset;\n      matchEndOffset = this.myMatchContext[iMatch].endOffset;\n      if (matchOffset < outOfBoundsOffset) { // there is room in text to highlight this match\n        // NOTE: matchEndOffset might be one past the end of transcriptText, which is\n        // ok for using it with transcriptText.substring(matchOffset, endingOffset):\n\n        // TODO: The following sort of string appending construction may be time-consuming - re-implement later once the means\n        // of transcript contruction with timing has been formalized (e.g., it may be replaced or augmented with closed-captioning).\n\n        // We now have processed transcript from original offset matchOffset to its end.\n        // We insert 3 characters at matchOffset and 4 more at matchEndOffset.\n        if (matchEndOffset < outOfBoundsOffset) {\n          textWithBoldedMatches = \"<b>\" +\n            this.myStory.transcript.substring(matchOffset, matchEndOffset) + \"</b>\" +\n            this.myStory.transcript.substring(matchEndOffset, outOfBoundsOffset) + textWithBoldedMatches;\n        }\n        else { // the match extends to the end of this chunk being considered.\n          textWithBoldedMatches = \"<b>\" +\n            this.myStory.transcript.substring(matchOffset, matchEndOffset) + \"</b>\" + textWithBoldedMatches;\n        }\n        outOfBoundsOffset = matchOffset; // from match forward, no longer process (to avoid any overlapping issues)\n        while (this.myStory.timingPairs[timingIndexToCheckFirst].offset >= matchOffset && timingIndexToCheckFirst > 0) {\n          timingIndexToCheckFirst--; // determine max number of timing entries to be checked for update based on <b>,</b> inserts\n        }\n        for (var iTiming = timingIndexToCheckFirst; iTiming < this.myStory.timingPairs.length; iTiming++) {\n          if (this.myStory.timingPairs[iTiming].offset > matchOffset) {\n            // Grow offset by 3 for <b> and perhaps an additional 4 for </b>\n            if (this.myStory.timingPairs[iTiming].offset >= matchEndOffset)\n              this.myStory.timingPairs[iTiming].offset += 7;\n            else\n              this.myStory.timingPairs[iTiming].offset += 3;\n          }\n          // else no offset adjustment needed for time entries at or before the matchOffset insert; e.g.,\n          // if match at \"snow\" and now we have <b>snow</b> keep timing offset pointed to start of <b>\n        }\n      }\n    }\n    if (this.myMatchContext.length > 0) {\n      // Transcript from outOfBoundsOffset to end already processed.  Tack on any text\n      // that precedes the first match.\n      if (outOfBoundsOffset > 0)\n        textWithBoldedMatches = this.myStory.transcript.substring(0, outOfBoundsOffset) + textWithBoldedMatches;\n    }\n    else {\n      // With no matches, this.myStory.timingPairs[] is unchanged and textWithBoldedMatches == transcriptText\n      textWithBoldedMatches = this.myStory.transcript;\n    }\n\n    // NOTE: at this point there has been no replacement of <br> for \\n in textWithBoldedMatches, to simplify all the offset adjustments.\n    // Do the replacement as chunks of transcript are moved intothis.transcriptPieces.\n    this.transcriptPieces = [];\n    var transcriptPiece: string;\n    var re = /\\n/g;\n\n    // Pass 2: use the adjusted this.myStory.timingPairs (to account for <b></b> inserts) to break\n    // textWithBoldedMatches(i.e., the transcript with matches) into this.transcriptPieces.\n    if (this.myStory.timingPairs.length > 1) {\n      // Fill transcript by breaking it into N pieces, corresponding to the N timing pieces.\n\n          for (var i = 0; i < this.myStory.timingPairs.length - 1; i++) {\n        if (this.myStory.timingPairs[i + 1].offset > this.myStory.timingPairs[i].offset) {\n          // Something worthwhile for this piece.\n          transcriptPiece = textWithBoldedMatches.substring(this.myStory.timingPairs[i].offset,\n            this.myStory.timingPairs[i + 1].offset)\n          transcriptPiece = transcriptPiece.replace(re,'<br>');\n          this.transcriptPieces.push(transcriptPiece);\n        }\n        else\n          // Empty string for this timing entry (ideally bogus timing entry would not even be there ever)\n          this.transcriptPieces.push(\"\");\n      }\n    }\n    else {\n      // No timing (or just one entry), so have all of transcript text be in one piece,\n      // and do not make it active (keep active indicator == -1).\n      transcriptPiece = textWithBoldedMatches.replace(re,'<br>');\n      this.transcriptPieces.push(transcriptPiece);\n    }\n  }\n\n  // Something off about the offset. Will look into when I return\n  advanceTranscript(offset) {\n    if (offset > 18) this.transcript.nativeElement.scrollTop = offset - 22;\n  }\n\n  isTranscriptPieceActive(whichPiece: number) { return (whichPiece == this.currentActiveTranscriptPiece); }\n\n  onPlayerReady(api: VgApiService) {\n    this.api = api;\n    this.api.getDefaultMedia().subscriptions.ended.subscribe(this.nextVideo.bind(this));\n  }\n\n  nextVideo() {\n    this.previousItem = this.currentItem;\n    this.currentIndex++;\n\n    if (this.currentIndex === this.playlist.length) {\n      this.currentIndex = 0;\n      this.myStory = {\n        transcript: this.transcriptText1,\n        timingPairs: this.timingPairsVideo1\n      }\n      this.transcriptPieces = [];\n      this.transcriptPieces.push(\"\");\n      this.currentActiveTranscriptPiece = -1;\n      this.ComputeTimesForOffsets();\n      this.ComputeTimedTranscriptWithMatches();\n    }\n    else {\n      this.myStory = {\n        transcript: this.transcriptText2,\n        timingPairs: this.timingPairsVideo2\n      }\n      this.transcriptPieces = [];\n      this.transcriptPieces.push(\"\");\n      this.currentActiveTranscriptPiece = -1;\n      this.ComputeTimesForOffsets();\n      this.ComputeTimedTranscriptWithMatches();\n    }\n\n    this.currentItem = this.playlist[ this.currentIndex ];\n\n  }\n\n  onClickPlaylistItem(item: IMedia, index: number) {\n    this.currentIndex = index;\n    this.currentItem = item;\n  }\n\n  isLoaded() {\n    this.initTranscriptHeight();\n  }\n\n  public initTranscriptHeight() {\n    this.computeTranscriptAreaHeight(window.innerWidth, window.innerHeight);\n  }\n\n  private computeTranscriptAreaHeight(fullWindowWidth: number, fullWindowHeight: number) {\n    // Block out height for other elements aside from transcript area.\n    // If those heights not computable yet, use a default.\n    // This work influenced by: http://stackoverflow.com/questions/35527559/angular2-get-window-width-onresize\n    // !!!TBD!!! TODO: Remove numeric constants here that assume certain positioning and sizing and styling.\n    // !!!TBD!!! TODO: Remove the need to bring in ElementRef just so that I could get height of videoPlayerAndControlsAreaRef\n    // This is frowned upon but I wanted to get a release out \"quickly\" for beta testing.\n    var blockOutHeight = 344;\n    var extrasHeight = 54; // !!!TBD!!! very ugly dependency here, of \"knowing\" that navbar needs at least 54 pixels, but it gets worse...\n    // Also, account for increasing font sizes at larger widths for the navbar, plus we are adding in a header image with height 108 when content width >= 768px\n    if (fullWindowWidth >= 600) {\n      if (fullWindowWidth >= 960) {\n        extrasHeight += 120; // !!!TBD!!! more ugliness, knowing that styles.css saves 174px (120+54) for widths >= 960\n        blockOutHeight += 20;\n      }\n      else if (fullWindowWidth >= 768) {\n        extrasHeight += 116; // !!!TBD!!! more ugliness, knowing that styles.css saves 170px (116+54) for widths >= 768 but < 960\n        blockOutHeight += 20;\n      }\n      else {\n        extrasHeight += 4; // !!!TBD!!! more ugliness, knowing that styles.css saves 58px (4+54) for widths >= 600 but < 768\n        blockOutHeight += 20;\n      }\n    }\n    if (this.videoPlayerAndControlsAreaRef) {\n      blockOutHeight = this.videoPlayerAndControlsAreaRef.nativeElement.offsetHeight + 10; // TODO: update when possible to remove need to access nativeElement\n    }\n    var newTranscriptHeight = fullWindowHeight - blockOutHeight - extrasHeight;\n\n    if (newTranscriptHeight < 100)\n      newTranscriptHeight = 100;\n    if (this.videoPlayerRef) {\n      const aspectRatio = this.videoPlayerRef.api.videogularElement.offsetWidth / this.videoPlayerRef.api.videogularElement.offsetHeight\n      if (fullWindowWidth >= 550 && this.wideScreen === false) {\n        this.transcriptAreaHeight = 220;\n      }\n        // Widescreen capability is currently commented out until a design is done\n        // else if (fullWindowWidth >= 768 && this.wideScreen === true) {\n        //     if (this.storyHasMatches === true) this.transcriptAreaHeight = fullWindowHeight - (this.videoPlayerRef.api.videogularElement.offsetHeight + 120);\n        //     else this.transcriptAreaHeight = fullWindowHeight - (this.videoPlayerRef.api.videogularElement.offsetHeight + 70);\n      // }\n      else {\n        if (this.storyHasMatches === true) this.transcriptAreaHeight = fullWindowHeight - (this.videoPlayerRef.api.videogularElement.offsetHeight + 250);\n        else this.transcriptAreaHeight = fullWindowHeight - (this.videoPlayerRef.api.videogularElement.offsetHeight + 215);\n      }\n    }\n  }\n\n  onResize(event) {\n    this.computeTranscriptAreaHeight(window.innerWidth, window.innerHeight);\n  }\n\n  adjustVideoCurrentTime() {\n    let movieTimeInSecs: number\n    movieTimeInSecs =  this.api.getDefaultMedia().currentTime;\n\n    // One-time setup of video transcript height based on video player (and player controls) height:\n    if (!this.transcriptHeightInitialized) {\n      this.computeTranscriptAreaHeight(window.innerWidth, window.innerHeight);\n      this.transcriptHeightInitialized = true;\n    }\n\n    this.videoPositionInSeconds = movieTimeInSecs;\n    // Possibly adjust which transcript piece is highlighted as well.\n    var maxTimingEntries: number = 0;\n\n    if (this.myStory && this.myStory.timingPairs)\n      maxTimingEntries = this.myStory.timingPairs.length;\n\n    if (maxTimingEntries > 1) {\n      // Only bother with selecting a piece of the transcript if there are 2+ pieces.\n      // The means of activating a piece is via this.currentActiveTranscriptPiece.\n      // NOTE: max value for this.currentActiveTranscriptPiece == maxTimingEntries - 2 under assumption\n      // that final timing entry in this.myStory.timingPairs equals transcript length as offset, video duration as timing, i.e.,\n      // that last entry does not help set an active region by itself but sets maximums on offset and video timing.\n      // This assumption allows us to safely make use of this.currentActiveTranscriptPiece + 1 as an index into this.myStory.timingPairs.\n      var movieTimeInMSecs: number = movieTimeInSecs * 1000;\n      if (this.currentActiveTranscriptPiece < 0 ||\n        movieTimeInMSecs < this.myStory.timingPairs[this.currentActiveTranscriptPiece].time ||\n        movieTimeInMSecs > this.myStory.timingPairs[this.currentActiveTranscriptPiece + 1].time) {\n        // There will be a change to this.currentActiveTranscriptPiece based on movieTimeInMSecs\n        if (movieTimeInMSecs < this.myStory.timingPairs[1].time)\n          this.currentActiveTranscriptPiece = 0;\n        else if (movieTimeInMSecs >= this.myStory.timingPairs[maxTimingEntries - 2].time)\n          this.currentActiveTranscriptPiece = maxTimingEntries - 2;\n        else {\n          for (var i: number = 1; i < maxTimingEntries - 1; i++)\n            if (movieTimeInMSecs < this.myStory.timingPairs[i + 1].time) {\n              this.currentActiveTranscriptPiece = i;\n              break;\n            }\n        }\n      }\n    }\n  }\n\n  private ComputeTimesForOffsets() {\n    // Use this.myStory.timingPairs and this.myStory.matchTerms to compute this.myMatchContext for each match in matchTerms\n    var i: number = 0;\n    var matchIndex: number = 0;\n    var maxTimingPairIndex: number;\n    var givenMatchesCount: number;\n    var newEntry: TimedTextMatch;\n\n    if (this.myStory.timingPairs == null)\n      maxTimingPairIndex = -1;\n    else\n      maxTimingPairIndex = this.myStory.timingPairs.length - 1;\n    if (givenMatchesCount == 0 || maxTimingPairIndex <= 0) {\n      this.storyHasMatches = false;\n      this.myMatchContext = [];\n      return;\n    }\n\n    this.storyHasMatches = true;\n    // As we move through this.myStory.timingPairs in ascending offset order, we don't go back,\n    // i.e., i starts at 0 but moves forward within this outer while loop rather than being\n    // reset to 0 each time:\n    while (matchIndex < givenMatchesCount) {\n      if (i == 0)\n        newEntry.time = this.myStory.timingPairs[0].time;\n      else\n        newEntry.time = this.myStory.timingPairs[i - 1].time;\n      this.myMatchContext.push(newEntry);\n      matchIndex++; // Note: service puts matches in order, so this.myStory.timingPairs[N+1].startOffset >= this.myStory.timingPairs[N].startOffset\n    }\n  }\n\n}\n","<div (window:resize)=\"onResize($event)\">\n    <div class=\"row video-container\">\n        <section class=\"col-sm-8\">\n            <h3 class=\"video__title\">{{currentItem.title}}</h3>\n            <vg-player (onPlayerReady)=\"onPlayerReady($event)\" #myVideoPlayer>\n              <vg-controls class=\"vg-controls\">\n                  <div class=\"vg-controls__inner-wrapper\">\n                      <vg-play-pause class=\"vg-play-pause\"></vg-play-pause>\n                      <vg-time-display class=\"vg-time-display \" [vgProperty]=\"'current'\"></vg-time-display> /\n                      <vg-time-display class=\"vg-time-display \" [vgProperty]=\"'total'\"></vg-time-display>\n                      <vg-scrub-bar class=\"vg-scrub-bar \" >\n                          <vg-scrub-bar-current-time class=\"vg-scrub-bar-current-time\"  [vgSlider]=\"true\"></vg-scrub-bar-current-time>\n                      </vg-scrub-bar>\n                      <svg class=\"vg-volume-speaker\" width=\"21\" height=\"15\" viewBox=\"0 0 21 15\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <title>\n                              Speaker volume icon\n                          </title>\n                          <path d=\"M5.428 3.872l5.428-3.62V14.73l-5.428-3.62H0V3.872h5.428zm7.275-1.03l1.248-.96c1.34 1.628 2.01 3.498 2.01 5.61 0 2.05-.64 3.877-1.92 5.48l-1.21-.994c1.037-1.327 1.555-2.822 1.555-4.487 0-1.748-.56-3.298-1.682-4.65 0 0 1.12 1.352 0 0zM17.623 15l.11-.145c1.713-2.147 2.57-4.59 2.57-7.328 0-2.774-.87-5.235-2.607-7.382L17.588 0l-1.502 1.158.126.145c1.484 1.82 2.226 3.896 2.226 6.224 0 2.28-.718 4.325-2.153 6.134l-.127.146L17.624 15z\" fill=\"#333\" fill-rule=\"evenodd\"/>\n                      </svg>\n                      <vg-volume class=\"vg-volume\"></vg-volume>\n                  </div>\n              </vg-controls>\n              <video aria-label=\"video\" [src]=\"currentItem.src\" [vgMedia]=\"media\" #media class=\"\" preload=\"auto\" playsinline [poster]=\"currentItem.thumb\" (loadeddata)=\"isLoaded()\" (timeupdate)=\"adjustVideoCurrentTime()\" (ended)=\"nextVideo()\"></video>\n            </vg-player>\n        </section>\n\n        <section class=\"col-sm-4 next-vid\">\n            <h3>Up Next</h3>\n            <div class=\"row next-vid__preview\" (click)=\"nextVideo()\">\n                <div class=\"col-md-6\"><img class=\"next-vid__thumb\" [src]=\"previousItem.thumb\" alt=\"\"></div>\n                <div class=\"col-md-6 next-vid__title\">{{previousItem.title}}</div>\n            </div>\n        </section>\n    </div>\n\n    <!-- Transcript area -->\n    <div class=\"\" *ngIf=\"timingPairs\">\n        <div class=\"\">\n                <div #transcript class=\"transcript adjust-height\" [class.transcript--mobile-active]=\"!mobileDetails\" [style.height.px]=\"transcriptAreaHeight\">\n                <div class=\"containerForTranscriptTextArea\">\n                    <p class=\"transcriptTextArea\" *ngFor=\"let onePiece of transcriptPieces;let i=index\">\n                        <span [class.selected]=\"isTranscriptPieceActive(i)\"\n                            [thdaScrollTranscript]=\"isTranscriptPieceActive(i)\"\n                            [innerHTML]=onePiece\n                            (topPosition)=\"advanceTranscript($event)\"></span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {VgCoreModule} from '@videogular/ngx-videogular/core';\nimport {VgControlsModule} from '@videogular/ngx-videogular/controls';\nimport {VgOverlayPlayModule} from '@videogular/ngx-videogular/overlay-play';\nimport {VgBufferingModule} from '@videogular/ngx-videogular/buffering';\nimport { ScrollTranscript }  from './scroll-transcript.directive';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScrollTranscript,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    VgCoreModule,\n    VgControlsModule,\n    VgOverlayPlayModule,\n    VgBufferingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nvar INTERPOLATION_REGEXP = /\\{\\{([\\s\\S]*?)\\}\\}/g; // default\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}