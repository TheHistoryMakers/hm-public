{"version":3,"sources":["./src/app/scroll-transcript.directive.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Directive, ElementRef, Input, Renderer2, Output, EventEmitter } from '@angular/core';\n\n// NOTE: this directive used to use scrollIntoView with window scrolling removed via CSS. However, it has been updated to pass\n// the top offset value of the element to the parent component. From there, the parent uses scrollTop with that value\n// on the transcript container. This way, we can scroll the element with overflow rather than the entire window, which is\n// better for responsive heights and layouts. We may want to discuss the value of keeping this functionality as a directive vs.\n// creating a transcript component. Right now, we still have to do the actual scrolling inside a function in the parent component.\n@Directive({ selector: '[thdaScrollTranscript]' })\nexport class ScrollTranscript {\n    private el: HTMLElement;\n\n    constructor(private _renderer: Renderer2, el: ElementRef) { this.el = el.nativeElement; }\n\n    @Input() set thdaScrollTranscript(condition: boolean) {\n        if (condition) {\n            var topPos = this.el.offsetTop;\n            this.updatePos(topPos);\n        }\n    }\n\n    @Output() topPosition: EventEmitter<any> = new EventEmitter();\n\n    updatePos(topPos) {\n        this.topPosition.emit(topPos);\n    }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { Component, Input, ElementRef, ViewChild } from '@angular/core';\nimport { DetailedStory } from './detailed-story';\nimport { TimedTextMatch } from './timed-text-match';\nimport { TranscriptTiming } from './transcript-timing';\nimport { VgCoreModule }         from '@videogular/ngx-videogular/core';\nimport { VgControlsModule }     from '@videogular/ngx-videogular/controls';\nimport { VgOverlayPlayModule }  from '@videogular/ngx-videogular/overlay-play';\nimport { VgBufferingModule }    from '@videogular/ngx-videogular/buffering';\nimport { VgApiService }         from '@videogular/ngx-videogular/core';\n\nexport interface IMedia {\n  title: string;\n  src: string;\n  type: string;\n  thumb: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  @ViewChild('myVideoArea') videoPlayerAndControlsAreaRef: ElementRef;\n  @ViewChild('myVideoPlayer') videoPlayerRef: any;\n  @ViewChild('transcript') transcript: any;\n\n  source: string;\n  source2: string;\n  title: string;\n  title2: string;\n  thumb: string;\n  thumb2: string;\n  mobileDetails: boolean = false;\n  transcriptAreaHeight: number = 100;\n  transcriptText: string;\n  transcriptText1: string;\n  transcriptText2: string;\n  myStory: DetailedStory;\n  myMatchContext: TimedTextMatch[] = [];\n  timingPairs: string;\n  timingPairsVideo1: TranscriptTiming[];\n  timingPairsVideo2: TranscriptTiming[];\n  wideScreen: boolean = false;\n  storyHasMatches: boolean = true;\n  videoPositionInSeconds: number = 0;\n\n  // Support interfaces for transcript scrolling\n  currentActiveTranscriptPiece: number;\n  transcriptPieces: string[];\n  transcriptHeightInitialized: boolean = false;\n\n  public api: VgApiService;\n\n  playlist: Array<IMedia>;\n  currentIndex = 0;\n  currentItem: IMedia;\n  previousItem: IMedia;\n\n  constructor(private elementRef:ElementRef) {\n    this.source = this.elementRef.nativeElement.getAttribute('source');\n    this.source2 = this.elementRef.nativeElement.getAttribute('source2');\n    this.title = this.elementRef.nativeElement.getAttribute('title');\n    this.title2 = this.elementRef.nativeElement.getAttribute('title2');\n    this.thumb = this.source.replace('video','image');\n    this.thumb2 = this.source2.replace('video','image');\n    this.timingPairs = this.elementRef.nativeElement.getAttribute('timingPairs');\n    this.transcriptText = this.elementRef.nativeElement.getAttribute('transcriptText');\n\n    this.transcriptText = this.transcriptText.replace( /(\\$)\\1+/gi, \"\\n\\n\").replace(/[\\\\]/, '');;\n    this.transcriptText1 = this.transcriptText.split(/[\\$]/)[0];\n    this.transcriptText2 = this.transcriptText.split(/[\\$]/)[1];\n    var index = this.timingPairs.indexOf(\"$\");\n    this.timingPairsVideo1 = this.timingPairsToJSON(this.timingPairs.substr(0, index));\n    this.timingPairsVideo2 = this.timingPairsToJSON(this.timingPairs.substr(index + 1) + \"}\");\n\n    this.playlist = [\n      {\n        title: this.title,\n        src: this.source,\n        type: 'video/mp4',\n        thumb: this.thumb\n      },\n      {\n        title: this.title2,\n        src: this.source2,\n        type: 'video/mp4',\n        thumb: this.thumb2\n      }\n    ];\n    this.currentItem = this.playlist[ this.currentIndex ];\n    this.previousItem = this.playlist[ this.currentIndex + 1 ];\n  }\n\n  timingPairsToJSON(timingPairs) {\n    let currentNum = \"\";\n    let newTimingPairs = [];\n    let newTimingPair: TranscriptTiming = {offset: 0, time: 0};\n    for (let ch of timingPairs) {\n      if (ch === ',') {\n        newTimingPair.time = Number(currentNum);\n        currentNum = \"\";\n      }\n      else if (ch === ':') {\n        newTimingPair.offset = Number(currentNum);\n        newTimingPairs.push(newTimingPair);\n        currentNum = \"\";\n        newTimingPair = {offset: 0, time: 0};\n      }\n      else {\n        currentNum = currentNum + ch;\n      }\n    }\n    return newTimingPairs;\n  }\n\n  ngOnInit() {\n    this.myStory = {\n      transcript: this.transcriptText1,\n      timingPairs: this.timingPairsVideo1\n    }\n    this.transcriptPieces = [];\n    this.transcriptPieces.push(\"\");\n    this.currentActiveTranscriptPiece = -1;\n    this.ComputeTimesForOffsets();\n    this.ComputeTimedTranscriptWithMatches();\n  }\n\n  // Helper function to bold match text in the transcript, and break transcript up into pieces to\n  // highlight a piece based on video transcript timing.  If there are no matches, then no text will get bolded.\n  private ComputeTimedTranscriptWithMatches() {\n    var matchOffset: number;\n    var matchEndOffset: number;\n    var textWithBoldedMatches: string;\n    var outOfBoundsOffset: number;\n    var timingIndexToCheckFirst: number;\n\n    if (this.myStory.transcript == null || this.myStory.transcript.length == 0) {\n      this.transcriptPieces = [];\n      this.transcriptPieces.push(\"\");\n      return; // give up if there is no transcript\n    }\n\n    // NOTE: assumes this.myStory.timing.length >= 1\n\n    // Pass 1: for every match BLAH, add in <b> and </b> markers around BLAH in transcript text.\n    // As such inserts are done, update the offset numbers in this.myStory.timingPairs.  The plain transcript\n    // will transform into textWithBoldedMatches.\n    // Pass 2: use this.myStory.timing to break textWithBoldedMatches (i.e., the transcript with matches)\n    // into this.transcriptPieces.\n\n    // Pass 1: walk the matches from last one (greatest offset into transcript) to first...\n    // Once a match is processed, never consider those characters again, i.e., even if match offsets\n    // and scoring words somehow overlap/intermingle, the logic here will never allow for a case like\n    // <b>ok here <b>bad, bold in bold</b></b> because the ending </b> of match N will never be placed\n    // after the start <b> of match N+1.\n    outOfBoundsOffset = this.myStory.transcript.length; // index transcriptText.length out of bounds (index transcriptText.length-1 still valid for length >= 1)\n    textWithBoldedMatches = \"\";\n    timingIndexToCheckFirst = this.myStory.timingPairs.length; // working from end of transcript back to front, so start with last timing entry\n    for (var iMatch: number = this.myMatchContext.length; iMatch > 0; iMatch--) {\n      matchOffset = this.myMatchContext[iMatch].startOffset;\n      matchEndOffset = this.myMatchContext[iMatch].endOffset;\n      if (matchOffset < outOfBoundsOffset) { // there is room in text to highlight this match\n        // NOTE: matchEndOffset might be one past the end of transcriptText, which is\n        // ok for using it with transcriptText.substring(matchOffset, endingOffset):\n\n        // TODO: The following sort of string appending construction may be time-consuming - re-implement later once the means\n        // of transcript contruction with timing has been formalized (e.g., it may be replaced or augmented with closed-captioning).\n\n        // We now have processed transcript from original offset matchOffset to its end.\n        // We insert 3 characters at matchOffset and 4 more at matchEndOffset.\n        if (matchEndOffset < outOfBoundsOffset) {\n          textWithBoldedMatches = \"<b>\" +\n            this.myStory.transcript.substring(matchOffset, matchEndOffset) + \"</b>\" +\n            this.myStory.transcript.substring(matchEndOffset, outOfBoundsOffset) + textWithBoldedMatches;\n        }\n        else { // the match extends to the end of this chunk being considered.\n          textWithBoldedMatches = \"<b>\" +\n            this.myStory.transcript.substring(matchOffset, matchEndOffset) + \"</b>\" + textWithBoldedMatches;\n        }\n        outOfBoundsOffset = matchOffset; // from match forward, no longer process (to avoid any overlapping issues)\n        while (this.myStory.timingPairs[timingIndexToCheckFirst].offset >= matchOffset && timingIndexToCheckFirst > 0) {\n          timingIndexToCheckFirst--; // determine max number of timing entries to be checked for update based on <b>,</b> inserts\n        }\n        for (var iTiming = timingIndexToCheckFirst; iTiming < this.myStory.timingPairs.length; iTiming++) {\n          if (this.myStory.timingPairs[iTiming].offset > matchOffset) {\n            // Grow offset by 3 for <b> and perhaps an additional 4 for </b>\n            if (this.myStory.timingPairs[iTiming].offset >= matchEndOffset)\n              this.myStory.timingPairs[iTiming].offset += 7;\n            else\n              this.myStory.timingPairs[iTiming].offset += 3;\n          }\n          // else no offset adjustment needed for time entries at or before the matchOffset insert; e.g.,\n          // if match at \"snow\" and now we have <b>snow</b> keep timing offset pointed to start of <b>\n        }\n      }\n    }\n    if (this.myMatchContext.length > 0) {\n      // Transcript from outOfBoundsOffset to end already processed.  Tack on any text\n      // that precedes the first match.\n      if (outOfBoundsOffset > 0)\n        textWithBoldedMatches = this.myStory.transcript.substring(0, outOfBoundsOffset) + textWithBoldedMatches;\n    }\n    else {\n      // With no matches, this.myStory.timingPairs[] is unchanged and textWithBoldedMatches == transcriptText\n      textWithBoldedMatches = this.myStory.transcript;\n    }\n\n    // NOTE: at this point there has been no replacement of <br> for \\n in textWithBoldedMatches, to simplify all the offset adjustments.\n    // Do the replacement as chunks of transcript are moved intothis.transcriptPieces.\n    this.transcriptPieces = [];\n    var transcriptPiece: string;\n    var re = /\\n/g;\n\n    // Pass 2: use the adjusted this.myStory.timingPairs (to account for <b></b> inserts) to break\n    // textWithBoldedMatches(i.e., the transcript with matches) into this.transcriptPieces.\n    if (this.myStory.timingPairs.length > 1) {\n      // Fill transcript by breaking it into N pieces, corresponding to the N timing pieces.\n\n          for (var i = 0; i < this.myStory.timingPairs.length; i++) {\n              if (this.myStory.timingPairs[i + 1].offset > this.myStory.timingPairs[i].offset) {\n          // Something worthwhile for this piece.\n                  transcriptPiece = textWithBoldedMatches.substring(this.myStory.timingPairs[i].offset,\n                          this.myStory.timingPairs[i + 1].offset)\n          transcriptPiece = transcriptPiece.replace(re,'<br>');\n          this.transcriptPieces.push(transcriptPiece);\n        }\n        else\n          // Empty string for this timing entry (ideally bogus timing entry would not even be there ever)\n          this.transcriptPieces.push(\"\");\n      }\n    }\n    else {\n      // No timing (or just one entry), so have all of transcript text be in one piece,\n      // and do not make it active (keep active indicator == -1).\n      transcriptPiece = textWithBoldedMatches.replace(re,'<br>');\n      this.transcriptPieces.push(transcriptPiece);\n    }\n  }\n\n  // Something off about the offset. Will look into when I return\n  advanceTranscript(offset) {\n    if (offset > 18) this.transcript.nativeElement.scrollTop = offset - 22;\n  }\n\n  isTranscriptPieceActive(whichPiece: number) { return (whichPiece == this.currentActiveTranscriptPiece); }\n\n  onPlayerReady(api: VgApiService) {\n    this.api = api;\n    this.api.getDefaultMedia().subscriptions.ended.subscribe(this.nextVideo.bind(this));\n  }\n\n  nextVideo() {\n    this.previousItem = this.currentItem;\n    this.currentIndex++;\n\n    if (this.currentIndex === this.playlist.length) {\n      this.currentIndex = 0;\n      this.myStory = {\n        transcript: this.transcriptText1,\n        timingPairs: this.timingPairsVideo1\n      }\n      this.transcriptPieces = [];\n      this.transcriptPieces.push(\"\");\n      this.currentActiveTranscriptPiece = -1;\n      this.ComputeTimesForOffsets();\n      this.ComputeTimedTranscriptWithMatches();\n    }\n    else {\n      this.myStory = {\n        transcript: this.transcriptText2,\n        timingPairs: this.timingPairsVideo2\n      }\n      this.transcriptPieces = [];\n      this.transcriptPieces.push(\"\");\n      this.currentActiveTranscriptPiece = -1;\n      this.ComputeTimesForOffsets();\n      this.ComputeTimedTranscriptWithMatches();\n    }\n\n    this.currentItem = this.playlist[ this.currentIndex ];\n\n  }\n\n  onClickPlaylistItem(item: IMedia, index: number) {\n    this.currentIndex = index;\n    this.currentItem = item;\n  }\n\n  isLoaded() {\n    this.initTranscriptHeight();\n  }\n\n  public initTranscriptHeight() {\n    this.computeTranscriptAreaHeight(window.innerWidth, window.innerHeight);\n  }\n\n  private computeTranscriptAreaHeight(fullWindowWidth: number, fullWindowHeight: number) {\n    // Block out height for other elements aside from transcript area.\n    // If those heights not computable yet, use a default.\n    // This work influenced by: http://stackoverflow.com/questions/35527559/angular2-get-window-width-onresize\n    // !!!TBD!!! TODO: Remove numeric constants here that assume certain positioning and sizing and styling.\n    // !!!TBD!!! TODO: Remove the need to bring in ElementRef just so that I could get height of videoPlayerAndControlsAreaRef\n    // This is frowned upon but I wanted to get a release out \"quickly\" for beta testing.\n    var blockOutHeight = 344;\n    var extrasHeight = 54; // !!!TBD!!! very ugly dependency here, of \"knowing\" that navbar needs at least 54 pixels, but it gets worse...\n    // Also, account for increasing font sizes at larger widths for the navbar, plus we are adding in a header image with height 108 when content width >= 768px\n    if (fullWindowWidth >= 600) {\n      if (fullWindowWidth >= 960) {\n        extrasHeight += 120; // !!!TBD!!! more ugliness, knowing that styles.css saves 174px (120+54) for widths >= 960\n        blockOutHeight += 20;\n      }\n      else if (fullWindowWidth >= 768) {\n        extrasHeight += 116; // !!!TBD!!! more ugliness, knowing that styles.css saves 170px (116+54) for widths >= 768 but < 960\n        blockOutHeight += 20;\n      }\n      else {\n        extrasHeight += 4; // !!!TBD!!! more ugliness, knowing that styles.css saves 58px (4+54) for widths >= 600 but < 768\n        blockOutHeight += 20;\n      }\n    }\n    if (this.videoPlayerAndControlsAreaRef) {\n      blockOutHeight = this.videoPlayerAndControlsAreaRef.nativeElement.offsetHeight + 10; // TODO: update when possible to remove need to access nativeElement\n    }\n    var newTranscriptHeight = fullWindowHeight - blockOutHeight - extrasHeight;\n\n    if (newTranscriptHeight < 100)\n      newTranscriptHeight = 100;\n    if (this.videoPlayerRef) {\n      const aspectRatio = this.videoPlayerRef.api.videogularElement.offsetWidth / this.videoPlayerRef.api.videogularElement.offsetHeight\n      if (fullWindowWidth >= 550 && this.wideScreen === false) {\n        this.transcriptAreaHeight = 220;\n      }\n        // Widescreen capability is currently commented out until a design is done\n        // else if (fullWindowWidth >= 768 && this.wideScreen === true) {\n        //     if (this.storyHasMatches === true) this.transcriptAreaHeight = fullWindowHeight - (this.videoPlayerRef.api.videogularElement.offsetHeight + 120);\n        //     else this.transcriptAreaHeight = fullWindowHeight - (this.videoPlayerRef.api.videogularElement.offsetHeight + 70);\n      // }\n      else {\n        if (this.storyHasMatches === true) this.transcriptAreaHeight = fullWindowHeight - (this.videoPlayerRef.api.videogularElement.offsetHeight + 250);\n        else this.transcriptAreaHeight = fullWindowHeight - (this.videoPlayerRef.api.videogularElement.offsetHeight + 215);\n      }\n    }\n  }\n\n  onResize(event) {\n    this.computeTranscriptAreaHeight(window.innerWidth, window.innerHeight);\n  }\n\n  adjustVideoCurrentTime() {\n    let movieTimeInSecs: number\n    movieTimeInSecs =  this.api.getDefaultMedia().currentTime;\n\n    // One-time setup of video transcript height based on video player (and player controls) height:\n    if (!this.transcriptHeightInitialized) {\n      this.computeTranscriptAreaHeight(window.innerWidth, window.innerHeight);\n      this.transcriptHeightInitialized = true;\n    }\n\n    this.videoPositionInSeconds = movieTimeInSecs;\n    // Possibly adjust which transcript piece is highlighted as well.\n    var maxTimingEntries: number = 0;\n\n    if (this.myStory && this.myStory.timingPairs)\n      maxTimingEntries = this.myStory.timingPairs.length;\n\n    if (maxTimingEntries > 1) {\n      // Only bother with selecting a piece of the transcript if there are 2+ pieces.\n      // The means of activating a piece is via this.currentActiveTranscriptPiece.\n      // NOTE: max value for this.currentActiveTranscriptPiece == maxTimingEntries - 2 under assumption\n      // that final timing entry in this.myStory.timingPairs equals transcript length as offset, video duration as timing, i.e.,\n      // that last entry does not help set an active region by itself but sets maximums on offset and video timing.\n      // This assumption allows us to safely make use of this.currentActiveTranscriptPiece + 1 as an index into this.myStory.timingPairs.\n      var movieTimeInMSecs: number = movieTimeInSecs * 1000;\n      if (this.currentActiveTranscriptPiece < 0 ||\n        movieTimeInMSecs < this.myStory.timingPairs[this.currentActiveTranscriptPiece].time ||\n        movieTimeInMSecs > this.myStory.timingPairs[this.currentActiveTranscriptPiece + 1].time) {\n        // There will be a change to this.currentActiveTranscriptPiece based on movieTimeInMSecs\n        if (movieTimeInMSecs < this.myStory.timingPairs[1].time)\n          this.currentActiveTranscriptPiece = 0;\n        else if (movieTimeInMSecs >= this.myStory.timingPairs[maxTimingEntries - 2].time)\n          this.currentActiveTranscriptPiece = maxTimingEntries - 2;\n        else {\n          for (var i: number = 1; i < maxTimingEntries - 1; i++)\n            if (movieTimeInMSecs < this.myStory.timingPairs[i + 1].time) {\n              this.currentActiveTranscriptPiece = i;\n              break;\n            }\n        }\n      }\n    }\n  }\n\n  private ComputeTimesForOffsets() {\n    // Use this.myStory.timingPairs and this.myStory.matchTerms to compute this.myMatchContext for each match in matchTerms\n    var i: number = 0;\n    var matchIndex: number = 0;\n    var maxTimingPairIndex: number;\n    var givenMatchesCount: number;\n    var newEntry: TimedTextMatch;\n\n    if (this.myStory.timingPairs == null)\n        maxTimingPairIndex = -1;\n    else\n        maxTimingPairIndex = this.myStory.timingPairs.length - 1;\n    if (givenMatchesCount == 0 || maxTimingPairIndex <= 0) {\n      this.storyHasMatches = false;\n      this.myMatchContext = [];\n      return;\n    }\n\n    this.storyHasMatches = true;\n    // As we move through this.myStory.timingPairs in ascending offset order, we don't go back,\n    // i.e., i starts at 0 but moves forward within this outer while loop rather than being\n    // reset to 0 each time:\n    while (matchIndex < givenMatchesCount) {\n      if (i == 0)\n        newEntry.time = this.myStory.timingPairs[0].time;\n      else\n        newEntry.time = this.myStory.timingPairs[i - 1].time;\n      this.myMatchContext.push(newEntry);\n      matchIndex++; // Note: service puts matches in order, so this.myStory.timingPairs[N+1].startOffset >= this.myStory.timingPairs[N].startOffset\n    }\n  }\n\n}\n","<div (window:resize)=\"onResize($event)\">\n    <div class=\"row video-container\">\n        <section class=\"col-sm-8\">\n            <h3 class=\"video__title\">{{currentItem.title}}</h3>\n            <vg-player (onPlayerReady)=\"onPlayerReady($event)\" #myVideoPlayer>\n              <vg-controls class=\"vg-controls\">\n                  <div class=\"vg-controls__inner-wrapper\">\n                      <vg-play-pause class=\"vg-play-pause\"></vg-play-pause>\n                      <vg-time-display class=\"vg-time-display \" [vgProperty]=\"'current'\"></vg-time-display> /\n                      <vg-time-display class=\"vg-time-display \" [vgProperty]=\"'total'\"></vg-time-display>\n                      <vg-scrub-bar class=\"vg-scrub-bar \" >\n                          <vg-scrub-bar-current-time class=\"vg-scrub-bar-current-time\"  [vgSlider]=\"true\"></vg-scrub-bar-current-time>\n                      </vg-scrub-bar>\n                      <svg class=\"vg-volume-speaker\" width=\"21\" height=\"15\" viewBox=\"0 0 21 15\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <title>\n                              Speaker volume icon\n                          </title>\n                          <path d=\"M5.428 3.872l5.428-3.62V14.73l-5.428-3.62H0V3.872h5.428zm7.275-1.03l1.248-.96c1.34 1.628 2.01 3.498 2.01 5.61 0 2.05-.64 3.877-1.92 5.48l-1.21-.994c1.037-1.327 1.555-2.822 1.555-4.487 0-1.748-.56-3.298-1.682-4.65 0 0 1.12 1.352 0 0zM17.623 15l.11-.145c1.713-2.147 2.57-4.59 2.57-7.328 0-2.774-.87-5.235-2.607-7.382L17.588 0l-1.502 1.158.126.145c1.484 1.82 2.226 3.896 2.226 6.224 0 2.28-.718 4.325-2.153 6.134l-.127.146L17.624 15z\" fill=\"#333\" fill-rule=\"evenodd\"/>\n                      </svg>\n                      <vg-volume class=\"vg-volume\"></vg-volume>\n                  </div>\n              </vg-controls>\n              <video aria-label=\"video\" [src]=\"currentItem.src\" [vgMedia]=\"media\" #media class=\"\" preload=\"auto\" playsinline [poster]=\"currentItem.thumb\" (loadeddata)=\"isLoaded()\" (timeupdate)=\"adjustVideoCurrentTime()\" (ended)=\"nextVideo()\"></video>\n            </vg-player>\n        </section>\n\n        <section class=\"col-sm-4 next-vid\">\n            <h3>Up Next</h3>\n            <div class=\"row next-vid__preview\" (click)=\"nextVideo()\">\n                <div class=\"col-md-6\"><img class=\"next-vid__thumb\" [src]=\"previousItem.thumb\" alt=\"\"></div>\n                <div class=\"col-md-6 next-vid__title\">{{previousItem.title}}</div>\n            </div>\n        </section>\n    </div>\n\n    <!-- Transcript area -->\n    <div class=\"\" *ngIf=\"timingPairs\">\n        <div class=\"\">\n                <div #transcript class=\"transcript adjust-height\" [class.transcript--mobile-active]=\"!mobileDetails\" [style.height.px]=\"transcriptAreaHeight\">\n                <div class=\"containerForTranscriptTextArea\">\n                    <p class=\"transcriptTextArea\" *ngFor=\"let onePiece of transcriptPieces;let i=index\">\n                        <span [class.selected]=\"isTranscriptPieceActive(i)\"\n                            [thdaScrollTranscript]=\"isTranscriptPieceActive(i)\"\n                            [innerHTML]=onePiece\n                            (topPosition)=\"advanceTranscript($event)\"></span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {VgCoreModule} from '@videogular/ngx-videogular/core';\nimport {VgControlsModule} from '@videogular/ngx-videogular/controls';\nimport {VgOverlayPlayModule} from '@videogular/ngx-videogular/overlay-play';\nimport {VgBufferingModule} from '@videogular/ngx-videogular/buffering';\nimport { ScrollTranscript }  from './scroll-transcript.directive';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScrollTranscript,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    VgCoreModule,\n    VgControlsModule,\n    VgOverlayPlayModule,\n    VgBufferingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nvar INTERPOLATION_REGEXP = /\\{\\{([\\s\\S]*?)\\}\\}/g; // default\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}